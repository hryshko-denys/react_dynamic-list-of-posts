{"version":3,"sources":["api/api.ts","Components/UserAdress/UserAdress.tsx","Components/User/User.tsx","Components/Comment/Comment.tsx","Components/CommentList/CommentList.tsx","Components/Post/Post.tsx","Components/PostList/PostList.tsx","Components/SearchBar/SearchBar.tsx","App.tsx","index.tsx"],"names":["getData","url","a","fetch","then","respond","json","response","getPrepearedPosts","Promise","all","posts","users","comments","map","post","user","find","person","id","userId","filter","comment","postId","UserAddress","address","street","suit","city","zipcode","className","User","name","email","href","Comment","body","CommentList","commentList","key","Post","title","PostList","postList","SearchBar","onChange","htmlFor","type","placeholder","App","useState","setPostList","filteredList","setFilteredList","isLoading","setIsLoading","isLoaded","setIsLoaded","getList","data","event","word","currentTarget","value","pattern","RegExp","newList","test","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f34eb2bb.chunk.js","sourcesContent":["import {\n  PostInterface,\n  UserInterface,\n  CommentInterface,\n  PostListInterface,\n} from '../interfaces';\n\nconst API_URL_POSTS = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api/posts.json';\nconst API_URL_USERS = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api/users.json';\nconst API_URL_COMMENTS = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api/comments.json';\n\nconst getData = async <T>(url: string): Promise<T[]> => {\n  const response = await fetch(url).then(respond => respond.json());\n\n  return response;\n};\n\nexport const getPrepearedPosts = async (): Promise<PostListInterface[]> => {\n  const [posts, users, comments] = await Promise.all(\n    [getData<PostInterface>(API_URL_POSTS),\n      getData<UserInterface>(API_URL_USERS),\n      getData<CommentInterface>(API_URL_COMMENTS)],\n  );\n\n  return posts.map(post => ({\n    ...post,\n    user: users.find(person => person.id === post.userId) as UserInterface,\n    comments: comments.filter(comment => comment.postId === post.id) as CommentInterface[],\n  }));\n};\n","import React, { FC } from 'react';\nimport { Address } from '../../interfaces';\n\ninterface AddressProps {\n  address: Address;\n}\n\nexport const UserAddress: FC<AddressProps> = ({ address }) => {\n  const {\n    street,\n    suit,\n    city,\n    zipcode,\n  } = address;\n\n  return (\n    <li className=\"user__item user__item--address\">\n      <p className=\"user__address-description\">\n        {`${street}, ${suit}, ${city}, ${zipcode}`}\n      </p>\n    </li>\n  );\n};\n","import React, { FC } from 'react';\nimport { UserInterface } from '../../interfaces';\nimport { UserAddress } from '../UserAdress/UserAdress';\nimport './User.css';\n\ninterface UserProps {\n  user: UserInterface;\n}\n\nexport const User: FC<UserProps> = ({ user }) => {\n  const {\n    name,\n    email,\n    address,\n  } = user;\n\n  return (\n    <>\n      <li className=\"user__item user__item--name\">\n        {name}\n      </li>\n      <li className=\"user__item user__item--email\">\n        <a href=\"# \">\n          {email}\n        </a>\n        <UserAddress address={address} />\n      </li>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { CommentInterface } from '../../interfaces';\nimport './Comment.css';\n\ninterface CommentProps {\n  comment: CommentInterface;\n}\n\nexport const Comment: FC<CommentProps> = ({ comment }) => {\n  const {\n    name,\n    body,\n    email,\n  } = comment;\n\n  return (\n    <>\n      <p className=\"comments__item comments__item--name\">\n        {name}\n      </p>\n      <p className=\"comments__item comments__item--body\">\n        {body}\n      </p>\n      <p className=\"comments__item comments__item--email\">\n        <a href=\"# \">\n          {email}\n        </a>\n      </p>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { CommentInterface } from '../../interfaces';\nimport { Comment } from '../Comment/Comment';\nimport './CommentList.css';\n\ninterface CommentListProps {\n  commentList: CommentInterface[];\n}\n\nexport const CommentList: FC<CommentListProps> = ({ commentList }) => (\n  <ul className=\"post__comments comments\">\n    {commentList.map(comment => (\n      <li key={comment.id} className=\"comment__item\">\n        <Comment comment={comment} />\n      </li>\n    ))}\n  </ul>\n);\n","import React, { FC } from 'react';\nimport { PostListInterface } from '../../interfaces';\nimport { User } from '../User/User';\nimport { CommentList } from '../CommentList/CommentList';\nimport './Post.css';\n\ninterface PostProps {\n  post: PostListInterface;\n}\n\nexport const Post: FC<PostProps> = ({ post }) => {\n  const {\n    title,\n    body,\n    user,\n    comments,\n  } = post;\n\n  return (\n    <>\n      <h1 className=\"post__title\">\n        {title}\n      </h1>\n      <p className=\"post__body\">\n        {body}\n      </p>\n      <ul className=\"post__user user\">\n        <User user={user} />\n      </ul>\n      <CommentList commentList={comments} />\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { PostListInterface } from '../../interfaces';\nimport { Post } from '../Post/Post';\nimport './PostList.css';\n\ninterface PostListProps {\n  postList: PostListInterface[];\n}\n\nexport const PostList: FC<PostListProps> = ({ postList }) => (\n  <ul className=\"list-group\">\n    {postList.map(post => (\n      <li key={post.id} className=\"post__item\">\n        <Post post={post} />\n      </li>\n    ))}\n  </ul>\n);\n","import React, { FC } from 'react';\n\ninterface SearchBarProps {\n  onChange: (event: React.FormEvent<HTMLInputElement>) => void;\n}\n\nexport const SearchBar: FC<SearchBarProps> = ({ onChange }) => (\n  <div className=\"box\">\n    <div className=\"field\">\n      <label htmlFor=\"search-query\" className=\"label\">\n        Search post\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id=\"search-query\"\n          className=\"input\"\n          placeholder=\"Type search word\"\n          onChange={onChange}\n        />\n      </div>\n    </div>\n  </div>\n);\n","import React, { FC, useState } from 'react';\nimport { PostListInterface } from './interfaces';\nimport { getPrepearedPosts } from './api/api';\nimport { PostList } from './Components/PostList/PostList';\nimport { SearchBar } from './Components/SearchBar/SearchBar';\nimport './App.css';\n\nconst App: FC = () => {\n  const [postList, setPostList] = useState<PostListInterface[]>([]);\n  const [filteredList, setFilteredList] = useState<PostListInterface[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const getList = async () => {\n    setIsLoading(true);\n    await getPrepearedPosts().then(data => {\n      setPostList(data);\n      setFilteredList(data);\n    });\n    setIsLoading(false);\n    setIsLoaded(true);\n  };\n\n  const getKeywords = (event: React.FormEvent<HTMLInputElement>) => {\n    const word = event.currentTarget.value;\n    const pattern = new RegExp(`${word}`, 'gi');\n\n    const newList = postList.filter(post => pattern.test(post.title)\n    || pattern.test(post.body));\n\n    setFilteredList(newList);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of posts</h1>\n      {!isLoaded\n        ? (\n          <button\n            type=\"button\"\n            onClick={getList}\n            disabled={isLoading}\n          >\n            {isLoading ? 'loading' : 'Load'}\n          </button>\n        )\n        : (\n          <div>\n            <SearchBar onChange={getKeywords} />\n            <PostList postList={filteredList} />\n          </div>\n        )}\n\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}